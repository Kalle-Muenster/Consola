/*///////////////////////////////////////////////////////////*\
||                                                           ||
||     File:      Parser.cpp                                 ||
||     Author:    autogenerated                              ||
||     Generated: by Command Generator v.0.1                 ||
||                                                           ||
\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

#include "ConsolaParser.hpp"

typedef unsigned char byte;


bool
Consola::StreamParser::nextByte( byte next )
{
	if( Found ) return true;
	int current = founds;
	if( search[founds] == next ) bucket[founds++] = next;
	else founds = 0;
	return founds > current;
}

int
Consola::StreamParser::Offset::get( void )
{
	if( Found ) {
		return -search->Length;
	} else return System::Int32::MaxValue;
}

array<byte>^
Consola::StreamParser::Sequence::get( void )
{
	return search;
}

void
Consola::StreamParser::Sequence::set( array<byte>^ value )
{
	search = gcnew array<byte>( value->Length );
	bucket = gcnew array<byte>( value->Length );
	System::Array::Copy( value, search, value->Length );
	founds = 0;
}


Consola::StreamParser::StreamParser( array<byte>^ searchForSequence )
{
	Sequence = searchForSequence;
}

bool
Consola::StreamParser::Parse( byte next )
{
	if( nextByte( next ) ) if( Found ) return true;
	return false;
}

byte
Consola::StreamParser::Check( byte next )
{
	nextByte( next );
	return next;
}

bool
Consola::StreamParser::Next( void )
{
	bool lastFound = Found;
	if( lastFound ) {
		bucket->Clear( bucket, 0, bucket->Length );
		founds = 0;
	} return lastFound;
}
