/*///////////////////////////////////////////////////////////*\
||                                                           ||
||     File:      ConsolaLogger.hpp                          ||
||     Author:    Autogenerated                              ||
||     Generated: 17.01.2021                                 ||
||                                                           ||
\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/
#ifndef _ConsolaLogger_hpp_
#define _ConsolaLogger_hpp_

#using <System.Runtime.dll>

using namespace System;
using namespace System::IO;


namespace Consola
{
    int sizeOfPoolInstance(void);

    public ref class LogWriter
        : public System::IO::StreamWriter
    {
    private:
        static array<FileInfo^>^  Infos = gcnew array<FileInfo^>(0);
        static array<LogWriter^>^ Files = gcnew array<LogWriter^>(0);
        
        static int  loggt( void );
        static int  stopt( String^ name );
        static void loggt_not( int idx, bool deleteFile );

    internal:
        LogWriter( Stream^ filestream, System::Text::Encoding^ encoding )
            : StreamWriter(filestream, encoding, sizeOfPoolInstance(), false) {
        }
        LogWriter( String^ fileName, bool append, System::Text::Encoding^ encoding )
            : StreamWriter(fileName, append, encoding, sizeOfPoolInstance()) {
        }

    public:
        static LogWriter^ AddLog( String^ name, System::Text::Encoding^ encoding );
        static LogWriter^ NewLog( String^ name, System::Text::Encoding^ encoding );
        static void       DelLog( String^ name );
        static void       Notlog( String^ name );

        LogWriter^ operator << ( Object^ obj ){
            this->Write( obj->ToString() );
            return this;
        }
        LogWriter^ Stream( Object^ obj ) {
            return this << obj;
        }
        property FileInfo^ Info {
            FileInfo^ get( void );
        }
    };

} //end of namespace Consola

#endif
