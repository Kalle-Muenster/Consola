/*///////////////////////////////////////////////////////////*\
||                                                           ||
||     File:      ConsolaLogger.cpp                          ||
||     Author:    Autogenerated                              ||
||     Generated: 17.01.2021                                 ||
||                                                           ||
\*\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\\*/

#include "ConsolaLogger.hpp"

void 
Consola::LogWriter::loggt_not( int idx, bool deleteFile )
{
    if ( idx >= Infos->Length ) return;
    Files[idx]->BaseStream->Flush();
    Files[idx]->BaseStream->Close();
    FileInfo^ remPeilo = Infos[idx];
    const int len = Infos->Length;
    array<FileInfo^>^  lesInfos = gcnew array<FileInfo^>( len-1 );
    array<LogWriter^>^ lesFiles = gcnew array<LogWriter^>( len-1 );
    int jump = 0;
    for (int i = 0; i < len; ++i) {
        if ( i == idx ) {
            jump = 1;
        } if ( i < (len - 1) ) {
            lesInfos[i] = Infos[ i+jump ];
            lesFiles[i] = Files[ i+jump ];
        }
    } Infos = lesInfos;
    Files = lesFiles;
    if( deleteFile ) {
        remPeilo->Refresh();
        remPeilo->Delete();
    }
}

int 
Consola::LogWriter::stopt( String^ name )
{
    const int len = Files->Length;
    int idx = -1;
    while (++idx < len) if (Infos[idx]->Name == name) break;
    if (idx == len) {
        idx = -1;
        while (++idx < len) if (Infos[idx]->FullName == name) break;
    } return idx;
}

int
Consola::LogWriter::loggt( void )
{
    const int len = Infos->Length;
    array<LogWriter^>^ extendFilo = gcnew array<LogWriter^>( len + 1 );
    array<FileInfo^>^  extendInfo = gcnew array<FileInfo^>( len + 1 );
    for (int i = 0; i < len; ++i) {
        extendFilo[i] = Files[i];
        extendInfo[i] = Infos[i];
    } Files = extendFilo;
    Infos = extendInfo;
    return len;
}

Consola::LogWriter^
Consola::LogWriter::AddLog( String^ name )
{
    const int len = loggt();
    Infos[len] = gcnew FileInfo( name );
    Files[len] = gcnew LogWriter( Infos[len]->FullName, true );
    return Files[len];
}

Consola::LogWriter^
Consola::LogWriter::NewLog( String^ name )
{
    const int len = loggt();
    Infos[len] = gcnew FileInfo( name ); 
    Files[len] = gcnew LogWriter( Infos[len]->FullName, false );
    return Files[len];
}

void
Consola::LogWriter::DelLog( String^ name ) {
    loggt_not( stopt(name), true );
}

void
Consola::LogWriter::Notlog( String^ name ) {
    loggt_not( stopt(name), false );
}

System::IO::FileInfo^ 
Consola::LogWriter::Info::get( void )
{
    for (int i = 0; i < LogWriter::Infos->Length; ++i) {
        if(this == LogWriter::Files[i])
            return LogWriter::Infos[i];
    } return nullptr;
}
